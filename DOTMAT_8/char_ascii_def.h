//char_ascii_def.h
int wC (int x, int ch, int e) {
  switch (e) {
    case 0:
      switch (ch) {
        case  32: return wSC(x, c_Space   , 3); break;  //  32    1
        case  33: return wSC(x, c_Ex      , 2); break;  //  !    11
        case  34: return wSC(x, c_SS      , 3); break;  //  "    21
        case  35: return wSC(x, c_Raut    , 5); break;  //  #    31
        case  36: return wSC(x, c_USD     , 5); break;  //  $    41
        case  37: return wSC(x, c_Proz    , 6); break;  //  %    51
        case  38: return wSC(x, c_AND     , 6); break;  //  &    61
        case  39: return wSC(x, c_HS      , 1); break;  //  '    71
        case  40: return wSC(x, c_RA      , 3); break;  //  (    81
        case  41: return wSC(x, c_RZ      , 3); break;  //  )    91
        case  42: return wSC(x, c_ST      , 5); break;  //  *    101
        case  43: return wSC(x, c_Pls     , 4); break;  //  +    111
        case  44: return wSC(x, c_KO      , 3); break;  //  ,    121
        case  45: return wSC(x, c_Min     , 4); break;  //  -    131
        case  46: return wSC(x, c_Pkt     , 2); break;  //  .    141
        case  47: return wSC(x, c_SL      , 4); break;  //  /    151
        case  48: return wSC(x, c_0       , 6); break;  //  0    161
        case  49: return wSC(x, c_1       , 4); break;  //  1    171
        case  50: return wSC(x, c_2       , 6); break;  //  2    181
        case  51: return wSC(x, c_3       , 6); break;  //  3    191
        case  52: return wSC(x, c_4       , 6); break;  //  4    201
        case  53: return wSC(x, c_5       , 6); break;  //  5    211
        case  54: return wSC(x, c_6       , 6); break;  //  6    221
        case  55: return wSC(x, c_7       , 6); break;  //  7    231
        case  56: return wSC(x, c_8       , 6); break;  //  8    241
        case  57: return wSC(x, c_9       , 6); break;  //  9    251
        case  58: return wSC(x, c_DP      , 2); break;  //  :    261
        case  59: return wSC(x, c_Smi     , 3); break;  //  ;    271
        case  62: return wSC(x, c_GT      , 4); break;  //  >    281
        case  61: return wSC(x, c_EQ      , 3); break;  //  =    291
        case  60: return wSC(x, c_LT      , 4); break;  //  <    301
        case  63: return wSC(x, c_AS      , 5); break;  //  ?    311
        case  64: return wSC(x, c_Et      , 6); break;  //  @    321
        case  65: return wSC(x, c_A       , 6); break;  //  A    331
        case  66: return wSC(x, c_B       , 6); break;  //  B    341
        case  67: return wSC(x, c_C       , 6); break;  //  C    351
        case  68: return wSC(x, c_D       , 6); break;  //  D    361
        case  69: return wSC(x, c_E       , 5); break;  //  E    371
        case  70: return wSC(x, c_F       , 5); break;  //  F    381
        case  71: return wSC(x, c_G       , 6); break;  //  G    391
        case  72: return wSC(x, c_H       , 6); break;  //  H    401
        case  73: return wSC(x, c_I       , 4); break;  //  I    411
        case  74: return wSC(x, c_J       , 5); break;  //  J    421
        case  75: return wSC(x, c_K       , 6); break;  //  K    431
        case  76: return wSC(x, c_L       , 5); break;  //  L    441
        case  77: return wSC(x, c_M       , 6); break;  //  M    451
        case  78: return wSC(x, c_N       , 6); break;  //  N    461
        case  79: return wSC(x, c_O       , 6); break;  //  O    471
        case  80: return wSC(x, c_P       , 6); break;  //  P    481
        case  81: return wSC(x, c_Q       , 6); break;  //  Q    491
        case  82: return wSC(x, c_R       , 6); break;  //  R    501
        case  83: return wSC(x, c_S       , 6); break;  //  S    511
        case  84: return wSC(x, c_T       , 6); break;  //  T    521
        case  85: return wSC(x, c_U       , 6); break;  //  U    531
        case  86: return wSC(x, c_V       , 6); break;  //  V    541
        case  87: return wSC(x, c_W       , 6); break;  //  W    551
        case  88: return wSC(x, c_X       , 5); break;  //  X    561
        case  89: return wSC(x, c_Y       , 6); break;  //  Y    571
        case  90: return wSC(x, c_Z       , 6); break;  //  Z    581
        case  91: return wSC(x, c_EA      , 3); break;  //  [    591
        case  92: return wSC(x, c_BSL     , 4); break;  //  \    601
        case  93: return wSC(x, c_EZ      , 3); break;  //  ]    611
        case  94: return wSC(x, c_Car     , 3); break;  //  ^    621
        case  95: return wSC(x, c_UD      , 4); break;  //  _    631
        case  96: return wSC(x, c_Acc     , 2); break;  //  `    641
        case  97: return wSC(x, c_a       , 6); break;  //  a    651
        case  98: return wSC(x, c_b       , 6); break;  //  b    661
        case  99: return wSC(x, c_c       , 6); break;  //  c    671
        case 100: return wSC(x, c_d       , 6); break;  //  d    681
        case 101: return wSC(x, c_e       , 6); break;  //  e    691
        case 102: return wSC(x, c_f       , 4); break;  //  f    701
        case 103: return wSC(x, c_g       , 6); break;  //  g    711
        case 104: return wSC(x, c_h       , 6); break;  //  h    721
        case 105: return wSC(x, c_i       , 4); break;  //  i    731
        case 106: return wSC(x, c_j       , 3); break;  //  j    741
        case 107: return wSC(x, c_k       , 5); break;  //  k    751
        case 108: return wSC(x, c_l       , 3); break;  //  l    761
        case 109: return wSC(x, c_m       , 6); break;  //  m    771
        case 110: return wSC(x, c_n       , 5); break;  //  n    781
        case 111: return wSC(x, c_o       , 6); break;  //  o    791
        case 112: return wSC(x, c_p       , 6); break;  //  p    801
        case 113: return wSC(x, c_q       , 6); break;  //  q    811
        case 114: return wSC(x, c_r       , 5); break;  //  r    821
        case 115: return wSC(x, c_s       , 4); break;  //  s    831
        case 116: return wSC(x, c_t       , 4); break;  //  t    841
        case 117: return wSC(x, c_u       , 6); break;  //  u    851
        case 118: return wSC(x, c_v       , 6); break;  //  v    861
        case 119: return wSC(x, c_w       , 6); break;  //  w    871
        case 120: return wSC(x, c_x       , 5); break;  //  x    881
        case 121: return wSC(x, c_y       , 6); break;  //  y    891
        case 122: return wSC(x, c_z       , 5); break;  //  z    901
        case 123: return wSC(x, c_GA      , 4); break;  //  {    911
        case 124: return wSC(x, c_Pipe    , 2); break;  //  |    921
        case 125: return wSC(x, c_GZ      , 4); break;  //  }    931
        case 126: return wSC(x, c_Til     , 5); break;  //  ~    941
      }
      break;
    case 1:
      switch (ch) {
        case  32: return wSC(x, c_Space   , 3); break;  //  HART
        case  97: return wSC(x, c_aelig   , 6); break;  //  a    1
        case  65: return wSC(x, c_Aelig   , 6); break;  //  A    11
        case 111: return wSC(x, c_oelig   , 6); break;  //  o    21
        case  79: return wSC(x, c_Oelig   , 6); break;  //  O    31
        case 117: return wSC(x, c_uelig   , 6); break;  //  u    41
        case  85: return wSC(x, c_Uelig   , 6); break;  //  U    51
        case 101: return wSC(x, c_elig    , 6); break;  //  e    61
        case  58: return wSC(x, c_DPP     , 2); break;  //  :    71
        case 115: return wSC(x, c_szlig   , 6); break;  //  s    81
        case  35: return wSC(x, c_ClDP    , 1); break;  //  #    91
        case  48: return wSC(x, c_M0      , 3); break;  //  0    101
        case  49: return wSC(x, c_M1      , 3); break;  //  1    111
        case  50: return wSC(x, c_M2      , 3); break;  //  2    121
        case  51: return wSC(x, c_M3      , 3); break;  //  3    131
        case  52: return wSC(x, c_M4      , 3); break;  //  4    141
        case  53: return wSC(x, c_M5      , 3); break;  //  5    151
        case  54: return wSC(x, c_M6      , 3); break;  //  6    161
        case  55: return wSC(x, c_M7      , 3); break;  //  7    171
        case  56: return wSC(x, c_M8      , 3); break;  //  8    181
        case  57: return wSC(x, c_M9      , 3); break;  //  9    191
        case  42: return wSC(x, c_LIG     , -2); break;  //  *    201
        case  46: return wSC(x, c_SpezPktO, 1); break;  //  .    211
        case  37: return wSC(x, c_Prozent1, 4); break;  //  %    221
        case  73: return wSC(x, c_Short1  , 2); break;  //  I    231
        case  90: return wSC(x, c_Short2  , 2); break;  //  Z    241
        case  40: return wSC(x, c_SmileyLR, 1); break;  //  (    251
        case 103: return wSC(x, c_Smiley  , 6); break;  //  g    261
        case  41: return wSC(x, c_SpezPktU, 1); break;  //  )    271
        case  95: return wSC(x, c_Smiley_ , 6); break;  //  _    281
        case 102: return wSC(x, c_NoSmiley, 6); break;  //  f    291
        case 104: return wSC(x, c_ClockSym, 4); break;  //  h    301
        case 120: return wSC(x, c_Cross   , 5); break;  //  x    311
        case  88: return wSC(x, c_Glass   , 5); break;  //  X    321
        case  89: return wSC(x, c_TFrame  , 1); break;  //  Y    331
        case 124: return wSC(x, c_Frame   , 1); break;  //  |    341
        case  76: return wSC(x, c_LP      , 5); break;  //  L    351
        case  43: return wSC(x, c_Plus1   , 3); break;  //  +    361
        case  45: return wSC(x, c_Minus1  , 3); break;  //  -    371
        case 109: return wSC(x, c_Off1    , 4); break;  //  m    381
        case 110: return wSC(x, c_Off2    , 3); break;  //  n    391
        case  78: return wSC(x, c_Note    , 6); break;  //  N    401
        case 112: return wSC(x, c_aUp     , 5); break;  //  p    411
        case  80: return wSC(x, c_aUpDown , 5); break;  //  P    421
        case  68: return wSC(x, c_aDown   , 5); break;  //  D    431
        case 107: return wSC(x, c_Disk    , 6); break;  //  k    441
        case 121: return wSC(x, c_Play    , 4); break;  //  y    451
        case 119: return wSC(x, c_Pause   , 5); break;  //  w    461
        case 118: return wSC(x, c_Stop    , 5); break;  //  v    471
        case  70: return wSC(x, c_box8    , 4); break;  //  F    481
        case 116: return wSC(x, c_Enter   , 5); break;  //  t    491
        case  69: return wSC(x, c_Euro    , 6); break;  //  E    501
        case  66: return wSC(x, c_kyrB    , 6); break;  //  B    511
        case  71: return wSC(x, c_kyrG    , 6); break;  //  G    521
        case 123: return wSC(x, c_kyrD    , 6); break;  //  {    531
        case  87: return wSC(x, c_kyrJo   , 5); break;  //  W    541
        case  99: return wSC(x, c_kyrGi1  , 6); break;  //  c    551
        case  63: return wSC(x, c_kyrGi2  , 4); break;  //  ?    561
        case  93: return wSC(x, c_kyrWS   , 6); break;  //  ]    571
        case  91: return wSC(x, c_kirI    , 6); break;  //  [    581
        case  74: return wSC(x, c_kirJ    , 6); break;  //  J    591
        case  75: return wSC(x, c_kirL    , 5); break;  //  K    601
        case  81: return wSC(x, c_kirP    , 6); break;  //  Q    611
        case  86: return wSC(x, c_kirF1   , 6); break;  //  V    621
        case 125: return wSC(x, c_kirF2   , 2); break;  //  }    631
        case  67: return wSC(x, c_kirZ    , 6); break;  //  C    641
        case  84: return wSC(x, c_kirTsch , 6); break;  //  T    651
        case  77: return wSC(x, c_kirSch1 , 6); break;  //  M    661
        case  38: return wSC(x, c_kirSch2 , 2); break;  //  &    671
        case  72: return wSC(x, c_kirscht , 4); break;  //  H    681
        case 113: return wSC(x, c_kyrHart , 6); break;  //  q    691
        case 106: return wSC(x, c_kirUi   , 6); break;  //  j    701
        case  98: return wSC(x, c_KirWeich, 5); break;  //  b    711
        case  83: return wSC(x, c_kirAe   , 6); break;  //  S    721
        case 114: return wSC(x, c_kirJu   , 6); break;  //  r    731
        case  82: return wSC(x, c_kirJa   , 6); break;  //  R    741
        case  94: return wSC(x, c_GRAD    , 4); break;  //  ^    751
        case  44: return wSC(x, c_OptOff  , 6); break;  //  ,    761
        case  59: return wSC(x, c_OptOn   , 6); break;  //  ;    771
        case  60: return wSC(x, c_aLeft   , 6); break;  //  <    781
        case 126: return wSC(x, c_aLftRi  , 6); break;  //  ~    791
        case  62: return wSC(x, c_aRight  , 6); break;  //  >    801
        case  33: return wSC(x, c_box1    , 4); break;  //  !    811
        case  34: return wSC(x, c_box2    , 4); break;  //  "    821
        case  36: return wSC(x, c_box3    , 4); break;  //  $    831
        case  39: return wSC(x, c_box4    , 4); break;  //  '    841
        case  47: return wSC(x, c_Res5    , 6); break;  //  /    851
        case  64: return wSC(x, c_box5    , 4); break;  //  @    861
        case  92: return wSC(x, c_box6    , 4); break;  //  \    871
        case  96: return wSC(x, c_Mpt     , 1); break;  //  `    881
        case 105: return wSC(x, c_box7    , 4); break;  //  i    891
        case 108: return wSC(x, c_box9    , 4); break;  //  l    901
        case 122: return wSC(x, c_box0    , 4); break;  //  z    911
      }
      break;
    case 2:
      switch (ch) {
        case  32: return wSC(x, c_Space   , 3); break;  //  HART
        case  33: return wSC(x, c_sm_Ex   , 1); break;  //  !    1
        case  34: return wSC(x, c_sm_SS   , 3); break;  //  "    11
        case  35: return wSC(x, c_sm_Raut , 5); break;  //  #    21
        case  36: return wSC(x, c_sm_USD  , 5); break;  //  $    31
        case  37: return wSC(x, c_sm_Proz , 4); break;  //  %    41
        case  38: return wSC(x, c_sm_AND  , 4); break;  //  &    51
        case  39: return wSC(x, c_sm_HS   , 1); break;  //  '    61
        case  40: return wSC(x, c_sm_RA   , 2); break;  //  (    71
        case  41: return wSC(x, c_sm_RZ   , 2); break;  //  )    81
        case  42: return wSC(x, c_sm_ST   , 3); break;  //  *    91
        case  43: return wSC(x, c_sm_Pls  , 3); break;  //  +    101
        case  44: return wSC(x, c_sm_KO   , 2); break;  //  ,    111
        case  45: return wSC(x, c_sm_Min  , 3); break;  //  -    121
        case  46: return wSC(x, c_sm_Pkt  , 1); break;  //  .    131
        case  47: return wSC(x, c_sm_SL   , 3); break;  //  /    141
        case  48: return wSC(x, c_sm_0    , 4); break;  //  0    151
        case  49: return wSC(x, c_sm_1    , 3); break;  //  1    161
        case  50: return wSC(x, c_sm_2    , 4); break;  //  2    171
        case  51: return wSC(x, c_sm_3    , 4); break;  //  3    181
        case  52: return wSC(x, c_sm_4    , 4); break;  //  4    191
        case  53: return wSC(x, c_sm_5    , 4); break;  //  5    201
        case  54: return wSC(x, c_sm_6    , 4); break;  //  6    211
        case  55: return wSC(x, c_sm_7    , 4); break;  //  7    221
        case  56: return wSC(x, c_sm_8    , 4); break;  //  8    231
        case  57: return wSC(x, c_sm_9    , 4); break;  //  9    241
        case  58: return wSC(x, c_sm_DP   , 1); break;  //  :    251
        case  59: return wSC(x, c_sm_Smi  , 2); break;  //  ;    261
        case  62: return wSC(x, c_sm_GT   , 3); break;  //  >    271
        case  61: return wSC(x, c_sm_EQ   , 3); break;  //  =    281
        case  60: return wSC(x, c_sm_LT   , 3); break;  //  <    291
        case  63: return wSC(x, c_sm_AS   , 3); break;  //  ?    301
        case  64: return wSC(x, c_sm_Et   , 4); break;  //  @    311
        case  65: return wSC(x, c_sm_A    , 3); break;  //  A    321
        case  66: return wSC(x, c_sm_B    , 3); break;  //  B    331
        case  67: return wSC(x, c_sm_C    , 3); break;  //  C    341
        case  68: return wSC(x, c_sm_D    , 3); break;  //  D    351
        case  69: return wSC(x, c_sm_E    , 3); break;  //  E    361
        case  70: return wSC(x, c_sm_F    , 3); break;  //  F    371
        case  71: return wSC(x, c_sm_G    , 4); break;  //  G    381
        case  72: return wSC(x, c_sm_H    , 3); break;  //  H    391
        case  73: return wSC(x, c_sm_I    , 3); break;  //  I    401
        case  74: return wSC(x, c_sm_J    , 3); break;  //  J    411
        case  75: return wSC(x, c_sm_K    , 3); break;  //  K    421
        case  76: return wSC(x, c_sm_L    , 3); break;  //  L    431
        case  77: return wSC(x, c_sm_M    , 5); break;  //  M    441
        case  78: return wSC(x, c_sm_N    , 3); break;  //  N    451
        case  79: return wSC(x, c_sm_O    , 3); break;  //  O    461
        case  80: return wSC(x, c_sm_P    , 3); break;  //  P    471
        case  81: return wSC(x, c_sm_Q    , 5); break;  //  Q    481
        case  82: return wSC(x, c_sm_R    , 3); break;  //  R    491
        case  83: return wSC(x, c_sm_S    , 3); break;  //  S    501
        case  84: return wSC(x, c_sm_T    , 3); break;  //  T    511
        case  85: return wSC(x, c_sm_U    , 3); break;  //  U    521
        case  86: return wSC(x, c_sm_V    , 4); break;  //  V    531
        case  87: return wSC(x, c_sm_W    , 5); break;  //  W    541
        case  88: return wSC(x, c_sm_X    , 3); break;  //  X    551
        case  89: return wSC(x, c_sm_Y    , 3); break;  //  Y    561
        case  90: return wSC(x, c_sm_Z    , 3); break;  //  Z    571
        case  91: return wSC(x, c_sm_EA   , 2); break;  //  [    581
        case  92: return wSC(x, c_sm_BSL  , 3); break;  //  \    591
        case  93: return wSC(x, c_sm_EZ   , 2); break;  //  ]    601
        case  94: return wSC(x, c_sm_Car  , 3); break;  //  ^    611
        case  95: return wSC(x, c_sm_UD   , 3); break;  //  _    621
        case  96: return wSC(x, c_sm_Acc  , 2); break;  //  `    631
        case  97: return wSC(x, c_sm_a    , 3); break;  //  a    641
        case  98: return wSC(x, c_sm_b    , 3); break;  //  b    651
        case  99: return wSC(x, c_sm_c    , 3); break;  //  c    661
        case 100: return wSC(x, c_sm_d    , 3); break;  //  d    671
        case 101: return wSC(x, c_sm_e    , 3); break;  //  e    681
        case 102: return wSC(x, c_sm_f    , 3); break;  //  f    691
        case 103: return wSC(x, c_sm_g    , 3); break;  //  g    701
        case 104: return wSC(x, c_sm_h    , 3); break;  //  h    711
        case 105: return wSC(x, c_sm_i    , 2); break;  //  i    721
        case 106: return wSC(x, c_sm_j    , 2); break;  //  j    731
        case 107: return wSC(x, c_sm_k    , 3); break;  //  k    741
        case 108: return wSC(x, c_sm_l    , 2); break;  //  l    751
        case 109: return wSC(x, c_sm_m    , 4); break;  //  m    761
        case 110: return wSC(x, c_sm_n    , 3); break;  //  n    771
        case 111: return wSC(x, c_sm_o    , 3); break;  //  o    781
        case 112: return wSC(x, c_sm_p    , 3); break;  //  p    791
        case 113: return wSC(x, c_sm_q    , 3); break;  //  q    801
        case 114: return wSC(x, c_sm_r    , 3); break;  //  r    811
        case 115: return wSC(x, c_sm_s    , 3); break;  //  s    821
        case 116: return wSC(x, c_sm_t    , 3); break;  //  t    831
        case 117: return wSC(x, c_sm_u    , 3); break;  //  u    841
        case 118: return wSC(x, c_sm_v    , 3); break;  //  v    851
        case 119: return wSC(x, c_sm_w    , 4); break;  //  w    861
        case 120: return wSC(x, c_sm_x    , 3); break;  //  x    871
        case 121: return wSC(x, c_sm_y    , 3); break;  //  y    881
        case 122: return wSC(x, c_sm_z    , 3); break;  //  z    891
        case 123: return wSC(x, c_sm_GA   , 3); break;  //  {    901
        case 124: return wSC(x, c_sm_Pipe , 1); break;  //  |    911
        case 125: return wSC(x, c_sm_GZ   , 3); break;  //  }    921
        case 126: return wSC(x, c_sm_Til  , 5); break;  //  ~    931
      }
      break;
    default: break;
  }
}
